import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

# Завантаження датасету
data = pd.read_csv('your_dataset.csv')

# Відокремлення ознак від цільової змінної, якщо вона є
X = data.drop(['Sl_No', 'Customer Key'], axis=1)

# Нормалізація даних
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Побудова моделі k-means
kmeans = KMeans(n_clusters=3, random_state=42)
kmeans.fit(X_scaled)

# Додавання міток кластерів до датасету
data['Cluster'] = kmeans.labels_

# Виведення результатів
print(data.head())

# Візуалізація кластерів
plt.scatter(X_scaled[:,0], X_scaled[:,1], c=kmeans.labels_, cmap='viridis')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, c='red')
plt.xlabel('Avg_Credit_Limit')
plt.ylabel('Total_Credit_Cards')
plt.title('Clustering of Customers')
plt.show()
#-----------------------------------------------------
plt.figure(figsize=(10, 6))

plt.scatter(data['Avg_Credit_Limit'], data['Total_Credit_Cards'], c=data['Cluster'], cmap='viridis', edgecolor='k', s=100)
plt.xlabel('Avg_Credit_Limit')
plt.ylabel('Total_Credit_Cards')
plt.title('Clustering on Original Data')
plt.colorbar(label='Cluster')
plt.grid(True)
plt.show()
#-------------------------------------------------
from sklearn.metrics import silhouette_score

# Перевірка для різної кількості кластерів
for n_clusters in range(2, 6):
    kmeans = KMeans(n_clusters=n_clusters, random_state=42)
    kmeans.fit(data)
    cluster_labels = kmeans.labels_
    silhouette_avg = silhouette_score(data, cluster_labels)
    print(f"For n_clusters = {n_clusters}, the average silhouette score is {silhouette_avg:.2f}")
